{"version":3,"sources":["utils/API.jsx","components/EmployeeDetail.jsx","components/SearchResultContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","EmployeeDetail","props","class","scope","alt","className","src","image","style","margin","name","phone","email","dob","SearchResultContainer","state","search","results","filteredResults","handleInputChange","event","value","target","filter","employee","first","toLowerCase","includes","setState","API","then","res","data","console","log","catch","err","display","justifyContent","height","width","borderRadius","borderColor","type","id","placeholder","fontFamily","onChange","this","map","picture","thumbnail","last","date","Component","App","backgroundColor","borderBottom","color","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIe,EACC,WACZ,OAAOA,IAAMC,IAJL,iDC0BGC,MA5Bf,SAAwBC,GACtB,OAIF,wBAAOC,MAAM,sBAAb,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACE,+BAEE,mCAAK,qBAAKC,IAAI,YAAYC,UAAU,YAAYC,IAAKL,EAAMM,MAAOC,MAAO,CAAEC,OAAQ,eACnF,6BAAKR,EAAMS,OACX,6BAAKT,EAAMU,QACX,6BAAKV,EAAMW,QACX,6BAAKX,EAAMY,eCwFFC,E,4MAtGbC,MAAQ,CACNC,OAAQ,GACRC,QAAS,GACTC,gBAAiB,I,EAsBnBC,kBAAoB,SAACC,GAEnB,IAAMC,EAAQD,EAAME,OAAOD,MACrBH,EAAkB,EAAKH,MAAME,QAAQM,QAAO,SAACC,GAAD,OAChDA,EAASd,KAAKe,MAAMC,cAAcC,SAASN,EAAMK,kBAEnD,EAAKE,SAAS,CACZZ,OAAQK,EACRH,gBAAiBA,K,kEAxBA,IAAD,OAClBW,IACGC,MAAK,SAACC,GACL,EAAKH,SAAS,CAAEX,QAASc,EAAIC,KAAKf,QAASC,gBAAiBa,EAAIC,KAAKf,UAErEgB,QAAQC,IAAIH,MAEbI,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,Q,+BAuC9B,OACE,qCACE,qBAAK5B,MAAO,CAAEC,OAAQ,GAAI4B,QAAS,OAAQC,eAAgB,UAA3D,SACE,uBACE9B,MAAO,CACL+B,OAAQ,GACRC,MAAO,IACPC,aAAc,EACdC,YAAa,WAEfC,KAAK,SACLC,GAAG,SACHC,YAAY,SACZC,WAAW,YACXC,SAAUC,KAAK7B,kBACfE,MAAO2B,KAAKjC,MAAMC,WAgBtB,8BACGgC,KAAKjC,MAAMG,gBAAgB+B,KAAI,SAACzB,GAAD,OAC9B,cAAC,EAAD,CACEjB,MAAOiB,EAAS0B,QAAQC,UACxBzC,KAAMc,EAASd,KAAKe,MAAQD,EAASd,KAAK0C,KAC1CzC,MAAOa,EAASb,MAChBC,MAAOY,EAASZ,MAChBC,IAAKW,EAASX,IAAIwC,mB,GA9FIC,aCmDrBC,MAtDf,SAAatD,GACX,OACE,qCACE,yBACEO,MAAO,CACLgD,gBAAiB,eACjBjB,OAAQ,IACRkB,aAAc,iBAEhBpD,UAAU,SANZ,UAQE,oBACEG,MAAO,CACLkD,MAAO,QACPC,UAAW,SACXb,WAAY,aAJhB,gCASA,mBACEtC,MAAO,CACLkD,MAAO,QACPC,UAAW,SACXb,WAAY,aAJhB,oGA2BF,8BACW,cAAC,EAAD,UCxCFc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4350116.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?results=50&nat=us\";\n\nexport default {\n  getEmployees: function() {\n    return axios.get(URL);\n  }\n};\n\n","function EmployeeDetail(props) {\n  return (\n\n    \n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Phone</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">DOB</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n    \n      <th> <img alt=\"thumbnail\" className=\"img-fluid\" src={props.image} style={{ margin: \"0 auto\" }} /></th>\n      <td>{props.name}</td>\n      <td>{props.phone}</td>\n      <td>{props.email}</td>\n      <td>{props.dob}</td>\n    </tr>\n  </tbody>\n</table>\n  )}\n\nexport default EmployeeDetail;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n// import ResultList from \"./ResultList\";\nimport EmployeeDetail from \"./EmployeeDetail\";\n// import axios from \"axios\";\n\nclass SearchResultContainer extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    filteredResults: [],\n    //sortedResults:\n  };\n\n  //what we are trying to do here is search the API for 50 random people\n  //when this component mounts\n  componentDidMount() {\n    API.getEmployees()\n      .then((res) => {\n        this.setState({ results: res.data.results, filteredResults: res.data.results});\n        //setState same as filtered results\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n    // (this.state.search).then(response=> {\n    //     console.log(response.data);\n    //     this.setState({\n    //         result: response.data,\n    //     });\n    // });\n  }\n  //TO DO\n  handleInputChange = (event) => {\n    // const name = [\"search\"];\n    const value = event.target.value;\n    const filteredResults = this.state.results.filter((employee) =>\n      employee.name.first.toLowerCase().includes(value.toLowerCase())\n    );\n    this.setState({\n      search: value,\n      filteredResults: filteredResults,\n    });\n  };\n\n  //DONT NEED\n  //   handleFormSubmit = event => {\n  //       event.preventDefault();\n  //       this.searchMovies(this.state.search);\n  //   };\n\n  // searchMovies = query => {\n  //   API.search(query)\n  //     .then(res => this.setState({ result: res.data }))\n  //     .catch(err => console.log(err));\n  // };\n\n  //need to map this\n\n  //ADD SORT BUTTON, onClick=, don't need sorted array, \n  //const sortedArray, results: sortedResults \n\n  render() {\n    return (\n      <>\n        <div style={{ margin: 20, display: \"flex\", justifyContent: \"center\" }}>\n          <input\n            style={{\n              height: 45,\n              width: 200,\n              borderRadius: 5,\n              borderColor: \"#E8E7EB\",\n            }}\n            type=\"search\"\n            id=\"search\"\n            placeholder=\"Search\"\n            fontFamily=\"Reem Kufi\"\n            onChange={this.handleInputChange}\n            value={this.state.search}\n          ></input>\n        </div>\n        {/* <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Phone</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">DOB</th>\n    </tr>\n  </thead>\n  \n\n  </table>  */}\n        <div>\n          {this.state.filteredResults.map((employee) => (\n            <EmployeeDetail\n              image={employee.picture.thumbnail}\n              name={employee.name.first + employee.name.last}\n              phone={employee.phone}\n              email={employee.email}\n              dob={employee.dob.date}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SearchResultContainer;\n","import \"./App.css\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n// import ResultList from \"./components/ResultList\";\n\nfunction App(props) {\n  return (\n    <>\n      <header\n        style={{\n          backgroundColor: \"rgb(0,24,65)\",\n          height: 130,\n          borderBottom: \"5px solid red\",\n        }}\n        className=\"header\"\n      >\n        <h1\n          style={{\n            color: \"white\",\n            textAlign: \"center\",\n            fontFamily: \"Reem Kufi\",\n          }}\n        >\n          Employee Directory\n        </h1>\n        <p\n          style={{\n            color: \"white\",\n            textAlign: \"center\",\n            fontFamily: \"Reem Kufi\",\n          }}\n        >\n          Click on carrots to filter by heading or use the search box to narrow\n          your results.\n        </p>\n      </header>\n      {/* <div style={{ margin: 20, display: \"flex\", justifyContent: \"center\" }}>\n        <input\n          style={{\n            height: 45,\n            width: 200,\n            borderRadius: 5,\n            borderColor: \"#E8E7EB\",\n          }}\n          type=\"search\"\n          id=\"search\"\n          placeholder=\"Search\"\n          fontFamily=\"Reem Kufi\"\n          onChange={props.handleInputChange}\n          value={props.value}\n        ></input>\n      </div> */}\n      <div>\n                 <SearchResultContainer />\n            </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}